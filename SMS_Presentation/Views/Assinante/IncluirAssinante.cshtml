@using Presentation.Extensions
@model SMS_Presentation.ViewModels.AssinanteViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Assinantes</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaAssinante", "Assinante")">Assinantes</a>
            </li>
            <li class="active">
                <strong>Assinantes - Inclusão</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Assinantes - Inclusão</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">Fechar</button>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>
                    }
                    <div class="tabs-container">
                        @using (Html.BeginForm("IncluirAssinante", "Assinante", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
                        {

                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#tab-1">Dados Gerais</a></li>
                        </ul>

                        <div class="tab-content">
                                @*Dados Gerais*@
                                <div id="tab-1" class="tab-pane active">
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <br />
                                            @Html.ButtonLinkIndex(text: "Cancelar", action: "VoltarBaseAssinante", controller: "Assinante")
                                        </div>
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                @Html.HiddenFor(m => m.ASSI_IN_ATIVO)
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.ASSI_IN_STATUS)
                                                    Tipo de Assinante*
                                                    @Html.DropDownListFor(m => m.ASSI_IN_TIPO, (SelectList)ViewBag.Tipos, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                    @Html.ValidationMessageFor(m => m.ASSI_IN_TIPO, "", new { @style = "color:red" })
                                                </div>
                                                <div class="col-lg-4 col-md-4 col-xs-12">
                                                    Nome*
                                                    @Html.TextBoxFor(m => m.ASSI_NM_NOME, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_NOME, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Data de Início
                                                    @Html.TextBoxFor(m => m.ASSI_DT_INICIO, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.ASSI_DT_INICIO, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Login*
                                                    @Html.TextBoxFor(m => m.ASSI_NM_LOGIN, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_LOGIN, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Senha*
                                                    @Html.TextBoxFor(m => m.ASSI_NM_SENHA, new { @class = "form-control pwd1", autofocus = true, @id="Password1" })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_SENHA, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="pwstrength_viewport_progress"></div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    E-Mail*
                                                    @Html.TextBoxFor(m => m.ASSI_NM_EMAIL, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_EMAIL, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Telefone
                                                    @Html.TextBoxFor(m => m.ASSI_NR_TELEFONE, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_TELEFONE, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Celular
                                                    @Html.TextBoxFor(m => m.ASSI_NR_CELULAR, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_CELULAR, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    WhatsApp
                                                    @Html.TextBoxFor(m => m.ASSI_NR_WHATSAPP, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_WHATSAPP, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Tipo de Pessoa*
                                                    @Html.DropDownListFor(m => m.ASSI_IN_PESSOA, (SelectList)ViewBag.Pessoas, "Selecionar", new { @class = "form-control", autofocus = true, @id="pessoa" })                            
                                                    @Html.ValidationMessageFor(m => m.ASSI_IN_PESSOA, "", new { @style = "color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12" id="PF">
                                                    CPF
                                                    @Html.TextBoxFor(m => m.ASSI_NR_CPF, new { @class = "form-control", autofocus = true, @id="cpf"})
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_CPF, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12" id="PJ">
                                                    CNPJ
                                                    @Html.TextBoxFor(m => m.ASSI_NR_CNPJ, new { @class = "form-control", autofocus = true, @id="cnpj"})
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_CNPJ, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    CEP
                                                    @Html.TextBoxFor(m => m.ASSI_NR_CEP, new { @class = "form-control", autofocus = true, @id="cep" })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NR_CEP, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-4 col-md-4 col-xs-12">
                                                    Endereço
                                                    @Html.TextBoxFor(m => m.ASSI_NM_ENDERECO, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_ENDERECO, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Bairro
                                                    @Html.TextBoxFor(m => m.ASSI_NM_BAIRRO, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_BAIRRO, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Cidade
                                                    @Html.TextBoxFor(m => m.ASSI_NM_CIDADE, new { @class = "form-control", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_NM_CIDADE, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    UF
                                                    @Html.DropDownListFor(m => m.UF_CD_ID, (SelectList)ViewBag.UF, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                    @Html.ValidationMessageFor(m => m.UF_CD_ID, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                    Observações
                                                    @Html.TextAreaFor(m => m.ASSI_TX_OBSERVACOES, new { @class = "form-control", style = "width: 100%; height: 200px;", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.ASSI_TX_OBSERVACOES, "", new { @style = "color:red" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <br />
                                    @Html.ButtonActionSubmit(text: "Confirma inclusão de Assinante", htmlAttributes: new { id = "basictoast" })
                                    @Html.ButtonLinkIndex(text: "Cancelar", action: "VoltarBaseAssinante", controller: "Assinante")
                                </div>
                        </div>
                        }
                    </div>
                </div>
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/passwordMeter")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>

    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
            .css("display", "normal")
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Selecione uma data",
                text: false 
            });
        });
    </script>  
    <script type="text/javascript">
        $(document).ready(function () {
            var options1 = {};
            options1.ui = {
                container: "#pwd-container1",
                showVerdictsInsideProgressBar: true,
                viewports: {
                    progress: ".pwstrength_viewport_progress"
                }
            };
            options1.common = {
                debug: false,
            };
            $('.pwd1').pwstrength(options1);

        });
    </script>
    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function(){
            //Chama o evento após selecionar um valor
            $('#pessoa').on('change', function() {
                //Verifica se o valor é igual a 1 e mostra a divCnpj
              if ( this.value == '2')
              {
                    $("#PF").hide();
                    $("#PJ").show();
              }
                //Se o tempo for mé igual a 2 mostra a divCpf
              else if( this.value == '1')
              {
                  $("#PJ").hide();
                  $("#PF").show();
              }
            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Inclusão em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
