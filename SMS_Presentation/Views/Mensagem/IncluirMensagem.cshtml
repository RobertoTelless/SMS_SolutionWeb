@using Presentation.Extensions
@model SMS_Presentation.ViewModels.MensagemViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Envio de SMS</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li class="active">
                <strong>Envio de SMS</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Envio de SMS</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>

                <div class="ibox-content">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">Fechar</button>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>
                    }
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.ButtonLinkIndex(text: "Cancelar", action: "Voltar", controller: "Mensagem")
                        </div>
                        <div class="row">
                            <div class="col-lg-9 col-md-9 col-xs-12" style="border-style:solid; border-color:darkblue; border-width:thin;">
                                @using (Html.BeginForm("IncluirMensagem", "Mensagem", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
                                {
                                    @Html.HiddenFor(m => m.USUA_CD_ID)
                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                    @Html.HiddenFor(m => m.MENS_IN_ATIVO)
                                    @Html.HiddenFor(m => m.MENS_DT_DATA)
                                    @Html.HiddenFor(m => m.MENS_IN_ATIVO)
                                    @Html.HiddenFor(m => m.MENS_DT_DATA)
                                    <br />
                                    <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                        <div class="col-lg-1 col-md-1 col-xs-12" style="vertical-align:middle; text-align:center">
                                            <h4>Para</h4>
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-xs-12">
                                            @Html.DropDownListFor(m => m.CONT_CD_ID, (SelectList)ViewBag.Contatos, "Pessoa", new { @class = "form-control", autofocus = true })                            
                                            @Html.ValidationMessageFor(m => m.CONT_CD_ID, "",new { @style="color:red" })
                                        </div>
                                        <div class="col-lg-1 col-md-1 col-xs-12" style="vertical-align:middle; text-align:center">
                                            <h4>ou</h4>
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-xs-12">
                                            @Html.DropDownListFor(m => m.GRUP_CD_ID, (SelectList)ViewBag.Grupos, "Grupo", new { @class = "form-control", autofocus = true })                            
                                            @Html.ValidationMessageFor(m => m.GRUP_CD_ID, "",new { @style="color:red" })
                                        </div>
                                        <div class="col-lg-1 col-md-1 col-xs-12" style="vertical-align:middle; text-align:center">
                                            <h4>ou</h4>
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-xs-12">
                                            @Html.DropDownListFor(m => m.CAMP_CD_ID, (SelectList)ViewBag.Campanhas, "Campanha", new { @class = "form-control", autofocus = true })                            
                                            @Html.ValidationMessageFor(m => m.CAMP_CD_ID, "",new { @style="color:red" })
                                        </div>
                                    </div>
                                    <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                        <div class="col-lg-10 col-md-10 col-xs-12">
                                            Nome da Campanha (Se não tiver sido selecionada um Campanha na lista acima)
                                            @Html.TextBoxFor(m => m.MENS_NM_CAMPANHA, new { @class = "form-control", autofocus = true })
                                            @Html.ValidationMessageFor(m => m.MENS_NM_CAMPANHA, "",new { @style="color:red" })
                                        </div>
                                    </div>
                                    <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                        <div class="col-lg-2 col-md-2 col-xs-12" style="vertical-align:middle; text-align:left">
                                            <h4>Mensagem</h4>   
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-xs-12" style="vertical-align:middle; text-align:center">
                                            @Html.ButtonLinkIndex(text: "Importar Dados", action: "ImportarDados", controller: "Mensagem", buttonClass: "white")
                                        </div>
                                        <div class="col-lg-4 col-md-4 col-xs-12">
                                            @Html.DropDownListFor(m => m.TEMP_CD_ID, (SelectList)ViewBag.Templates, "Modelos de Mensagens", new { @class = "form-control", autofocus = true, onchange = "RecuperarMensagem($(this).val())" })                            
                                            @Html.ValidationMessageFor(m => m.TEMP_CD_ID, "",new { @style="color:red" })
                                        </div>
                                    </div>
                                    <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                        <div class="col-lg-12 col-md-12 col-xs-12">
                                            @Html.TextAreaFor(m => m.MENS_TX_TEXTO, new { @class = "form-control", style = "width: 100%; height: 100px;", autofocus = true, @id="Texto" })
                                            @Html.ValidationMessageFor(m => m.MENS_TX_TEXTO, "", new { @style = "color:red" })
                                        </div>
                                    </div>
                                    <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                        <div class="col-lg-2 col-md-2 col-xs-12">
                                            Tipo de SMS
                                            @Html.DropDownListFor(m => m.MENS_IN_TIPO_SMS, (SelectList)ViewBag.Tipos, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                            @Html.ValidationMessageFor(m => m.MENS_IN_TIPO_SMS, "",new { @style="color:red" })
                                        </div>
                                        <div class="col-lg-2 col-md-2 col-xs-12">
                                            Operação
                                            @Html.DropDownListFor(m => m.MENS_IN_OPERACAO, (SelectList)ViewBag.Operacoes, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                            @Html.ValidationMessageFor(m => m.MENS_IN_OPERACAO, "",new { @style="color:red" })
                                        </div>
                                        <div id="agenda" class="col-lg-3 col-md-3 col-xs-12">
                                            Data de Agendamento
                                            @Html.TextBoxFor(m => m.MENS_DT_AGENDA, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true, @id="data"})
                                            @Html.ValidationMessageFor(m => m.MENS_DT_AGENDA, "",new { @style="color:red" })
                                        </div>
                                        <div class="col-lg-4 col-md-4 col-xs-12">
                                            @Html.ButtonActionSubmit(text: "Processar Operação Selecionada", buttonClass: "success", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    </div>
                                }

                            </div>  
                            <div class="col-lg-3 col-md-3 col-xs-12" style="border-style:solid; border-color:darkblue; border-width:thin;">
                                <br />
                                <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                    <div class="col-lg-12 col-md-12 col-xs-12">
                                        Mensagens de Retorno
                                        @Html.TextAreaFor(m => m. MENS_TX_RETORNOS, new { @class = "form-control", style = "width: 100%; height: 400px;", autofocus = true })
                                        @Html.ValidationMessageFor(m => m.MENS_TX_RETORNOS, "", new { @style = "color:red" })
                                    </div>
                                </div>
                            </div>  
                        </div>


                    </div>
                </div>
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/passwordMeter")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>

    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
            .css("display", "normal")
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Selecione uma data",
                text: false 
            });
        });
    </script>  
    <script type="text/javascript">
        $(document).ready(function () {
            var options1 = {};
            options1.ui = {
                container: "#pwd-container1",
                showVerdictsInsideProgressBar: true,
                viewports: {
                    progress: ".pwstrength_viewport_progress"
                }
            };
            options1.common = {
                debug: false,
            };
            $('.pwd1').pwstrength(options1);

        });
    </script>
    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
            $("#data").mask("99/99/9999");
            $("#data1").mask("99/99/9999");
            $("#tel").mask("(99)9999-9999");
            $("#cel").mask("(99)99999-9999");
            $("#zap").mask("(99)99999-9999");
            $("#zap2").mask("(99)99999-9999");
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#MENS_IN_OPERACAO').change(function () {
                var ddlValue = $(this).val();

                if (ddlValue == "1") {
                    $('#agenda').hide();
                }
                else if (ddlValue == "2") {
                    $('#agenda').show();
                }
            });
        });
    </script>
    <script>
        function RecuperarMensagem(TEMP_CD_ID) {
            var data = {
                id: TEMP_CD_ID
            }

            var objTexto = $('MENS_TX_TEXTO');

            // Requisição para o controller
            $.ajax({
                url: '../Mensagem/RecuperarTemplate'
                , type: 'POST'
                , data: data
                , success: function (r) {
                    document.getElementById('Texto').value= r..
                    //console.log(r);
                }
            });
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Envio em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
